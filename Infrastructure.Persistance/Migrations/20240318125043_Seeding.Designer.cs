// <auto-generated />
using Infrastructure.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistance.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240318125043_Seeding")]
    partial class Seeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoreMarket.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Name = "Sony"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Name = "Zara"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Name = "H&M"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Name = "Tommy Hilfiger"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Name = "Adidas"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Name = "Nike"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Name = "Puma"
                        });
                });

            modelBuilder.Entity("CoreMarket.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Electronics",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Clothing",
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Sports and Outdoors",
                            Name = "Sports and Outdoors"
                        });
                });

            modelBuilder.Entity("CoreMarket.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("ShoppingBasketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("ShoppingBasketId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            Name = "S22 Ultra",
                            Price = 699.0,
                            Quantity = 30
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            Name = "Apple Watch 9",
                            Price = 449.0,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 3,
                            Name = "A95L",
                            Price = 2599.0,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 4,
                            Name = "STEPPJACKE",
                            Price = 69.950000000000003,
                            Quantity = 250
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 7,
                            Name = "Football shoe",
                            Price = 79.989999999999995,
                            Quantity = 150
                        });
                });

            modelBuilder.Entity("CoreMarket.Models.ShoppingBasket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("ShoppingBaskets");
                });

            modelBuilder.Entity("CoreMarket.Models.Brand", b =>
                {
                    b.HasOne("CoreMarket.Models.Category", "Category")
                        .WithMany("brands")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("CoreMarket.Models.Product", b =>
                {
                    b.HasOne("CoreMarket.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreMarket.Models.ShoppingBasket", "shoppingBasket")
                        .WithMany("Products")
                        .HasForeignKey("ShoppingBasketId");

                    b.Navigation("Brand");

                    b.Navigation("shoppingBasket");
                });

            modelBuilder.Entity("CoreMarket.Models.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("CoreMarket.Models.Category", b =>
                {
                    b.Navigation("brands");
                });

            modelBuilder.Entity("CoreMarket.Models.ShoppingBasket", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
