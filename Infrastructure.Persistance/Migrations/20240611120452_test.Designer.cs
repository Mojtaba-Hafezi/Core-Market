// <auto-generated />
using System;
using Infrastructure.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistance.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240611120452_test")]
    partial class test
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("BASE")
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.BaseProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("BaseProducts", "BASE");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseProduct");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Brands", "BASE");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(1468),
                            IsDeleted = false,
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(1487),
                            IsDeleted = false,
                            Name = "Apple"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(1493),
                            IsDeleted = false,
                            Name = "Sony"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(1526),
                            IsDeleted = false,
                            Name = "Zara"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(1532),
                            IsDeleted = false,
                            Name = "H&M"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(1537),
                            IsDeleted = false,
                            Name = "Tommy Hilfiger"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(1542),
                            IsDeleted = false,
                            Name = "Adidas"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(1547),
                            IsDeleted = false,
                            Name = "Nike"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(1551),
                            IsDeleted = false,
                            Name = "Puma"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeletedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories", "BASE");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(749),
                            Description = "Electronics",
                            IsDeleted = false,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(827),
                            Description = "Clothing",
                            IsDeleted = false,
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(835),
                            Description = "Sports and Outdoors",
                            IsDeleted = false,
                            Name = "Sports and Outdoors"
                        });
                });

            modelBuilder.Entity("Domain.Entities.DigitalProduct", b =>
                {
                    b.HasBaseType("Domain.Entities.BaseProduct");

                    b.Property<double>("FileSize")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("DigitalProduct");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            BrandId = 2,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(1779),
                            IsDeleted = false,
                            Name = "Becoming",
                            Price = 14.99,
                            FileSize = 25.0
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 2,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(1789),
                            IsDeleted = false,
                            Name = "The Great Gatsby",
                            Price = 10.99,
                            FileSize = 2.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.PhysicalProduct", b =>
                {
                    b.HasBaseType("Domain.Entities.BaseProduct");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("PhysicalProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(1664),
                            IsDeleted = false,
                            Name = "S22 Ultra",
                            Price = 699.0,
                            Quantity = 30,
                            Weight = 0.20999999999999999
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 2,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(1674),
                            IsDeleted = false,
                            Name = "Apple Watch 9",
                            Price = 449.0,
                            Quantity = 50,
                            Weight = 0.080000000000000002
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 3,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(1682),
                            IsDeleted = false,
                            Name = "A95L",
                            Price = 2599.0,
                            Quantity = 10,
                            Weight = 40.0
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 4,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(1686),
                            IsDeleted = false,
                            Name = "STEPPJACKE",
                            Price = 69.950000000000003,
                            Quantity = 250,
                            Weight = 1.25
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 7,
                            CreatedAt = new DateTime(2024, 6, 11, 14, 4, 51, 953, DateTimeKind.Local).AddTicks(1691),
                            IsDeleted = false,
                            Name = "Football shoe",
                            Price = 79.989999999999995,
                            Quantity = 150,
                            Weight = 0.070000000000000007
                        });
                });

            modelBuilder.Entity("Domain.Entities.BaseProduct", b =>
                {
                    b.HasOne("Domain.Entities.Brand", "Brand")
                        .WithMany("BaseProducts")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Domain.Entities.Brand", b =>
                {
                    b.HasOne("Domain.Entities.Category", "Category")
                        .WithMany("brands")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.Entities.Brand", b =>
                {
                    b.Navigation("BaseProducts");
                });

            modelBuilder.Entity("Domain.Entities.Category", b =>
                {
                    b.Navigation("brands");
                });
#pragma warning restore 612, 618
        }
    }
}
